
# Copyright 2016 Alexandre Fenyo - alex@fenyo.net - http://fenyo.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#################################################################################
# Parametres de la fonction fournisseur de service

# activer la fonction fournisseur de service en positionnant debug a true
net.fenyo.MITREidAzure.config.oidc.debug=true

# parametres d'authentification pour les echanges entre ce fournisseur de services et Azure
net.fenyo.MITREidAzure.config.oidc.clientid=4ca839e1-9d8e-495f-a5ad-2cef071fc630
net.fenyo.MITREidAzure.config.oidc.clientsecret=NOwVQhFkegLGn6TkJvqOOhY

# timeout de session
# Sans activite pendant ce delai (en minutes), la session expire donc l'acces a une page protegee necessite une nouvelle authentification via Azure.
# Si cette valeur est inferieure a la duree de session d'Azure, la reconnexion pourra dans certains cas etre transparente.
# Ex. :
# - sessiontimeout vaut 10 minutes
# - l'utilisateur se connecte au fournisseur de service et s'authentifie via Azure a t0
# - a partir de t0 + 5 min, l'utilisateur devient inactif
# - sa session chez le fournisseur de service est donc invalide a partir de t0 + 5 min + sessiontimeout, c'est a dire t0 + 15 min
# - a t0 + 20 min, l'utilisateur reprend son activite en accedant a une page protegee
# - la session ayant expire, le fournisseur de service renvoie l'utilisateur s'authentifier chez Azure
# - la session Azure n'ayant pas expire (si l'utilisateur n'a pas fait une deconnexion d'Azure entre-temps, depuis ce fournisseur de service ou un autre), Azure fournit un jeton d'autorisation au fournisseur de service sans interaction utilisateur
# - le fournisseur de service utilise ce jeton d'autorisation pour recuperer le token id et l'identite de l'utilisateur
net.fenyo.MITREidAzure.config.oidc.sessiontimeout=240

# emetteur des id token JWT
# la reception d'un id token JWT en provenance d'un autre emetteur entraine le rejet de l'authentification
net.fenyo.MITREidAzure.config.oidc.issuer=https://xxx

# Quatre endpoints sont declares pour la configuration de la cinematique d'authentification via Azure : 3 endpoints fournis par Azure et un endpoint pour le fournisseur de service.
# La cinematique d'authentification est la suivante :
# - Lorsque le filtre Spring MITREid Connect detecte l'acces a une ressource protegee et qu'il n'y a pas eu de precedente authentification pour la session courante,
#   MITREid Connect redirige alors l'utilisateur vers son endpoint de callback.
# - Ce endpoint constate qu'aucun id token n'est associe a cette session et qu'aucun parametre contenant un code d'autorisation n'est fourni dans la requete qu'il recoit.
# - Il entame donc la cinematique OpenID Connect pour demander un code d'autorisation a l'authorization endpoint et ce code est renvoye par Azure sur ce endpoint.
# - A la reception du code, le endpoint de callback invoque alors un web services REST vers le token endpoint de Azure pour recuperer un id token et un access token.
# - Un nouveau web service REST presentant l'access token est invoque sur le userinfo endpoint d'Azure pour recuperer le userinfo qui represente l'identite de l'utilisateurs au format JSON.
# - L'utilisateur est enfin renvoye vers la ressource protegee, a laquelle il a desormais acces.

# URI des endpoints OpenID Connect d'Azure
net.fenyo.MITREidAzure.config.oidc.authorizationendpointuri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
net.fenyo.MITREidAzure.config.oidc.tokenendpointuri=https://login.microsoftonline.com/common/oauth2/v2.0/token
net.fenyo.MITREidAzure.config.oidc.userinfoendpointuri=https://xxx

# URI du endpoint de callback du fournisseur de services
# URI declaree par le fournisseur de services chez Azure dans la section "Urls de callback".
# Le choix de la chaine openid_connect_login est impose par l'implementation MitreID Connect, elle ne doit donc pas etre substituee par une autre chaine.
# Cette URI est le point d'entree de MitreID Connect lui permettant de recevoir le code d'autorisation et d'enchainer alors la cinematique de recuperation des tokens.
net.fenyo.MITREidAzure.config.oidc.redirecturi=http://127.0.0.1/openid_connect_login

# URI de deconnexion globale d'Azure
net.fenyo.MITREidAzure.config.oidc.logouturi=https://xxx

# URI declaree par le fournisseur de services chez Azure dans la section "Urls de redirection de deconnexion"
# URI ou l'utilisateur est renvoye apres deconnexion du service, qu'il ait accepte ou pas la deconnexion d'Azure. Pas forcement sur le fournisseur de services, potentiellement sur le site institutionnel associe.
# Cette URI est aussi utilisee en cas d'erreur d'authentification, pour proposer à l'utilisateur de retourner au site institutionnel.
net.fenyo.MITREidAzure.config.oidc.afterlogouturi=http://127.0.0.1/

# URI ou l'utilisateur est renvoye en cas d'erreur d'authentification
# Si cette URI pointe vers /authenticationError sur le fournisseur de service,
# l'utilisateur se verra alors propose de continuer sa navigation sur l'URL definie par net.fenyo.MITREidAzure.config.oidc.afterlogouturi.
net.fenyo.MITREidAzure.config.oidc.authenticationerroruri=http://127.0.0.1/authenticationError

# URI de logout utilisee par le bouton Azure ou le fournisseur de service pour initier la sequence de logout
net.fenyo.MITREidAzure.config.oidc.startlogouturi=j_spring_security_logout

#################################################################################
# Parametres exclusivement utilises pour la fonction IdP

# On utilise un chiffrement symetrique de type AES-256-CBC avec padding PKCS#7

# Cle AES 256 bits en hexadecimal (generation via openssl : "openssl rand -hex 32")
net.fenyo.MITREidAzure.config.idp.key=a6a7ee7abe681c9c4cede8e3366a9ded96b92668ea5e26a31a4b0856341ed224
# Vecteur d'initialisation 128 bits en hexadecimal (generation via openssl : "openssl rand -hex 16")
net.fenyo.MITREidAzure.config.idp.iv=87b7225d16ea2ae1f41d0b13fdce9bba
# Debut de l'URL de callback de l'application, pour n'accepter que les messages provenant de cette application
net.fenyo.MITREidAzure.config.idp.redirecturi=https://fenyo.net/fc/identite.cgi?
